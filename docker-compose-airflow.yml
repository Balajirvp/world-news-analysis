services:
  postgres:
    image: postgres:13
    container_name: reddit_airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - reddit_network

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: redditworldnewspipeline-airflow
    container_name: reddit_airflow_webserver
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data_collection:/opt/airflow/data_collection
      - ./elasticsearch:/opt/airflow/elasticsearch
      - ./data:/opt/airflow/data
      - ./main.py:/opt/airflow/main.py
      - ./.env:/opt/airflow/.env
      - /c/Users/balaj/.cache/huggingface:/home/airflow/.cache/huggingface
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - reddit_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 'all'  # Use 'all' if you want to use all available GPUs
              capabilities: [gpu]

  airflow-scheduler:
    image: redditworldnewspipeline-airflow
    container_name: reddit_airflow_scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data_collection:/opt/airflow/data_collection
      - ./elasticsearch:/opt/airflow/elasticsearch
      - ./data:/opt/airflow/data
      - ./main.py:/opt/airflow/main.py
      - ./.env:/opt/airflow/.env
    command: scheduler
    networks:
      - reddit_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 'all'  # Use 'all' if you want to use all available GPUs
              capabilities: [gpu]

networks:
  reddit_network:
    external: true

volumes:
  postgres_data:
    driver: local