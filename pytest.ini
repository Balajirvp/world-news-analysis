[tool:pytest]
# Pytest configuration
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=data_collection
    --cov=main
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=85

# Markers for categorizing tests
markers =
    unit: Unit tests for individual components
    integration: Integration tests for the full pipeline
    slow: Tests that take a long time to run
    external: Tests that require external services
    gpu: Tests that require GPU/CUDA

# Minimum version requirements
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment the following line to run tests in parallel
# addopts = -n auto

# Coverage configuration
[coverage:run]
source = data_collection, main
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
